# this code is auto generated by codegen_primitive.py
from deap import gp

dummy = None
Expr = float

pset = gp.PrimitiveSetTyped("MAIN", [], Expr)

# polars_ta.wq.arithmetic
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='add')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='divide')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='max_')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='mean')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='min_')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='mod')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='multiply')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='power')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='signed_power')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='std')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='subtract')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='var')
pset.addPrimitive(dummy, [Expr, int], Expr, name='round_')
pset.addPrimitive(dummy, [Expr, int], Expr, name='round_down')
pset.addPrimitive(dummy, [Expr], Expr, name='abs_')
pset.addPrimitive(dummy, [Expr], Expr, name='arc_cos')
pset.addPrimitive(dummy, [Expr], Expr, name='arc_sin')
pset.addPrimitive(dummy, [Expr], Expr, name='arc_tan')
pset.addPrimitive(dummy, [Expr], Expr, name='ceiling')
pset.addPrimitive(dummy, [Expr], Expr, name='cos')
pset.addPrimitive(dummy, [Expr], Expr, name='cosh')
pset.addPrimitive(dummy, [Expr], Expr, name='densify')
pset.addPrimitive(dummy, [Expr], Expr, name='exp')
pset.addPrimitive(dummy, [Expr], Expr, name='expm1')
pset.addPrimitive(dummy, [Expr], Expr, name='floor')
pset.addPrimitive(dummy, [Expr], Expr, name='fraction')
pset.addPrimitive(dummy, [Expr], Expr, name='inverse')
pset.addPrimitive(dummy, [Expr], Expr, name='log')
pset.addPrimitive(dummy, [Expr], Expr, name='log10')
pset.addPrimitive(dummy, [Expr], Expr, name='log1p')
pset.addPrimitive(dummy, [Expr], Expr, name='reverse')
pset.addPrimitive(dummy, [Expr], Expr, name='s_log_1p')
pset.addPrimitive(dummy, [Expr], Expr, name='sign')
pset.addPrimitive(dummy, [Expr], Expr, name='sin')
pset.addPrimitive(dummy, [Expr], Expr, name='sinh')
pset.addPrimitive(dummy, [Expr], Expr, name='softsign')
pset.addPrimitive(dummy, [Expr], Expr, name='sqrt')
pset.addPrimitive(dummy, [Expr], Expr, name='tan')
pset.addPrimitive(dummy, [Expr], Expr, name='tanh')
# polars_ta.wq.cross_sectional
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='cs_regression_neut')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='cs_regression_proj')
pset.addPrimitive(dummy, [Expr, bool], Expr, name='cs_one_side')
pset.addPrimitive(dummy, [Expr, bool], Expr, name='cs_rank')
pset.addPrimitive(dummy, [Expr, float, float, float], Expr, name='cs_scale')
pset.addPrimitive(dummy, [Expr, float], Expr, name='cs_truncate')
pset.addPrimitive(dummy, [Expr, int], Expr, name='cs_qcut')
pset.addPrimitive(dummy, [Expr, int], Expr, name='cs_scale_down')
pset.addPrimitive(dummy, [Expr, int], Expr, name='cs_top_bottom')
pset.addPrimitive(dummy, [Expr], Expr, name='cs_fill_except_all_null')
pset.addPrimitive(dummy, [Expr], Expr, name='cs_fill_mean')
pset.addPrimitive(dummy, [Expr], Expr, name='cs_fill_null')
# polars_ta.wq.logical
pset.addPrimitive(dummy, [Expr, Expr, Expr], Expr, name='if_else')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='and_')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='equal')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='less')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='or_')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='xor')
pset.addPrimitive(dummy, [Expr], Expr, name='is_finite')
pset.addPrimitive(dummy, [Expr], Expr, name='is_nan')
pset.addPrimitive(dummy, [Expr], Expr, name='is_not_finite')
pset.addPrimitive(dummy, [Expr], Expr, name='is_not_nan')
pset.addPrimitive(dummy, [Expr], Expr, name='is_not_null')
pset.addPrimitive(dummy, [Expr], Expr, name='is_null')
pset.addPrimitive(dummy, [Expr], Expr, name='negate')
pset.addPrimitive(dummy, [Expr], Expr, name='not_')
# polars_ta.wq.preprocess
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='cs_mad_zscore_resid')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='cs_resid')
pset.addPrimitive(dummy, [Expr, float, Expr], Expr, name='cs_mad_rank2_resid')
pset.addPrimitive(dummy, [Expr, float, float], Expr, name='cs_mad')
pset.addPrimitive(dummy, [Expr, float, float], Expr, name='cs_quantile')
pset.addPrimitive(dummy, [Expr, float], Expr, name='cs_3sigma')
pset.addPrimitive(dummy, [Expr, float], Expr, name='cs_mad_rank2')
pset.addPrimitive(dummy, [Expr, float], Expr, name='cs_rank2')
pset.addPrimitive(dummy, [Expr, int], Expr, name='cs_zscore')
pset.addPrimitive(dummy, [Expr], Expr, name='cs_demean')
pset.addPrimitive(dummy, [Expr], Expr, name='cs_mad_rank')
pset.addPrimitive(dummy, [Expr], Expr, name='cs_mad_zscore')
pset.addPrimitive(dummy, [Expr], Expr, name='cs_minmax')
# polars_ta.wq.time_series
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, bool, bool], Expr, name='ts_signals_to_size')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_partial_corr')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_triple_corr')
pset.addPrimitive(dummy, [Expr, Expr, int, int], Expr, name='ts_co_kurtosis')
pset.addPrimitive(dummy, [Expr, Expr, int, int], Expr, name='ts_co_skewness')
pset.addPrimitive(dummy, [Expr, Expr, int, int], Expr, name='ts_corr')
pset.addPrimitive(dummy, [Expr, Expr, int, int], Expr, name='ts_covariance')
pset.addPrimitive(dummy, [Expr, Expr, int, int], Expr, name='ts_sum_split_by')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_pred')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_regression_intercept')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_regression_pred')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_regression_resid')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_regression_slope')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_resid')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_weighted_mean')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_weighted_sum')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='ts_cum_prod_by')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='ts_cum_sum_by')
pset.addPrimitive(dummy, [Expr, float], Expr, name='ts_weighted_decay')
pset.addPrimitive(dummy, [Expr, int, bool], Expr, name='ts_arg_max')
pset.addPrimitive(dummy, [Expr, int, bool], Expr, name='ts_arg_min')
pset.addPrimitive(dummy, [Expr, int, bool], Expr, name='ts_skewness')
pset.addPrimitive(dummy, [Expr, int, float], Expr, name='ts_decay_exp_window')
pset.addPrimitive(dummy, [Expr, int, float], Expr, name='ts_min_max_cps')
pset.addPrimitive(dummy, [Expr, int, float], Expr, name='ts_min_max_diff')
pset.addPrimitive(dummy, [Expr, int, float], Expr, name='ts_percentage')
pset.addPrimitive(dummy, [Expr, int, int], Expr, name='ts_moment')
pset.addPrimitive(dummy, [Expr, int, int], Expr, name='ts_std_dev')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_count')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_count_nans')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_count_nulls')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_decay_linear')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_delay')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_delta')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_fill_null')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_ir')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_kurtosis')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_l2_norm')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_log_diff')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_max')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_max_diff')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_mean')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_median')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_min')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_min_diff')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_product')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_rank')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_returns')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_scale')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_sum')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_zscore')
pset.addPrimitive(dummy, [Expr], Expr, name='ts_cum_count')
pset.addPrimitive(dummy, [Expr], Expr, name='ts_cum_max')
pset.addPrimitive(dummy, [Expr], Expr, name='ts_cum_min')
pset.addPrimitive(dummy, [Expr], Expr, name='ts_cum_prod')
pset.addPrimitive(dummy, [Expr], Expr, name='ts_cum_sum')
pset.addPrimitive(dummy, [Expr], Expr, name='ts_cum_sum_reset')
# polars_ta.wq.transformational
pset.addPrimitive(dummy, [Expr, float, float, bool, float], Expr, name='clamp')
pset.addPrimitive(dummy, [Expr, float, float, float], Expr, name='tail')
pset.addPrimitive(dummy, [Expr, float, int], Expr, name='keep')
pset.addPrimitive(dummy, [Expr, float], Expr, name='cut')
pset.addPrimitive(dummy, [Expr, float], Expr, name='left_tail')
pset.addPrimitive(dummy, [Expr, float], Expr, name='right_tail')
pset.addPrimitive(dummy, [Expr], Expr, name='bool_')
pset.addPrimitive(dummy, [Expr], Expr, name='fill_nan')
pset.addPrimitive(dummy, [Expr], Expr, name='fill_null')
pset.addPrimitive(dummy, [Expr], Expr, name='int_')
pset.addPrimitive(dummy, [Expr], Expr, name='purify')
pset.addPrimitive(dummy, [Expr], Expr, name='sigmoid')
# polars_ta.wq.vector
pset.addPrimitive(dummy, [Expr, float], Expr, name='vec_percentage')
pset.addPrimitive(dummy, [Expr, float], Expr, name='vec_powersum')
pset.addPrimitive(dummy, [Expr, int], Expr, name='vec_choose')
pset.addPrimitive(dummy, [Expr], Expr, name='vec_avg')
pset.addPrimitive(dummy, [Expr], Expr, name='vec_count')
pset.addPrimitive(dummy, [Expr], Expr, name='vec_ir')
pset.addPrimitive(dummy, [Expr], Expr, name='vec_kurtosis')
pset.addPrimitive(dummy, [Expr], Expr, name='vec_l2_norm')
pset.addPrimitive(dummy, [Expr], Expr, name='vec_max')
pset.addPrimitive(dummy, [Expr], Expr, name='vec_min')
pset.addPrimitive(dummy, [Expr], Expr, name='vec_norm')
pset.addPrimitive(dummy, [Expr], Expr, name='vec_range')
pset.addPrimitive(dummy, [Expr], Expr, name='vec_skewness')
pset.addPrimitive(dummy, [Expr], Expr, name='vec_stddev')
pset.addPrimitive(dummy, [Expr], Expr, name='vec_sum')

# this code is auto generated by codegen_primitive.py
from deap import gp

dummy = None
Expr = float

pset = gp.PrimitiveSetTyped("MAIN", [], Expr)

# polars_ta.ta.momentum
pset.addPrimitive(dummy, [Expr, Expr, Expr, int, int], Expr, name='ts_STOCHF_fastd')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_RSV')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_WILLR')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_AROON_aroondown')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_AROON_aroonup')
pset.addPrimitive(dummy, [Expr, int, int, int], Expr, name='ts_APO')
pset.addPrimitive(dummy, [Expr, int, int, int], Expr, name='ts_MACD_macdhist')
pset.addPrimitive(dummy, [Expr, int, int, int], Expr, name='ts_MACD_macdsignal')
pset.addPrimitive(dummy, [Expr, int, int, int], Expr, name='ts_PPO')
pset.addPrimitive(dummy, [Expr, int, int], Expr, name='ts_MACD_macd')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_MOM')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_ROC')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_ROCP')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_ROCR')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_ROCR100')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_RSI')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_TRIX')
# polars_ta.ta.operators
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_MAXINDEX')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_MININDEX')
# polars_ta.ta.overlap
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_MIDPRICE')
pset.addPrimitive(dummy, [Expr, int, float], Expr, name='ts_BBANDS_upperband')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_DEMA')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_EMA')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_KAMA')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_MIDPOINT')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_RMA')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_TEMA')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_TRIMA')
# polars_ta.ta.price
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='AVGPRICE')
pset.addPrimitive(dummy, [Expr, Expr, Expr], Expr, name='TYPPRICE')
pset.addPrimitive(dummy, [Expr, Expr, Expr], Expr, name='WCLPRICE')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='MEDPRICE')
# polars_ta.ta.statistic
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_BETA')
pset.addPrimitive(dummy, [Expr, int, float], Expr, name='ts_STDDEV')
pset.addPrimitive(dummy, [Expr, int, float], Expr, name='ts_VAR')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_LINEARREG')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_LINEARREG_ANGLE')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_LINEARREG_INTERCEPT')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_LINEARREG_SLOPE')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_TSF')
# polars_ta.ta.volatility
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_ATR')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_NATR')
pset.addPrimitive(dummy, [Expr, Expr, Expr], Expr, name='ts_TRANGE')
# polars_ta.ta.volume
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, int, int], Expr, name='ts_ADOSC')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_AD')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='ts_OBV')

# this code is auto generated by codegen_primitive.py
from deap import gp

dummy = None
Expr = float

pset = gp.PrimitiveSetTyped("MAIN", [], Expr)

# polars_ta.talib
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, float], Expr, name='ts_CDLABANDONEDBABY')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, float], Expr, name='ts_CDLDARKCLOUDCOVER')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, float], Expr, name='ts_CDLEVENINGDOJISTAR')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, float], Expr, name='ts_CDLEVENINGSTAR')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, float], Expr, name='ts_CDLMATHOLD')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, float], Expr, name='ts_CDLMORNINGDOJISTAR')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, float], Expr, name='ts_CDLMORNINGSTAR')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, int, int], Expr, name='ts_ADOSC')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, int], Expr, name='ts_MFI')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='AVGPRICE')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_AD')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_BOP')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDL2CROWS')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDL3BLACKCROWS')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDL3INSIDE')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDL3LINESTRIKE')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDL3OUTSIDE')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDL3STARSINSOUTH')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDL3WHITESOLDIERS')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLADVANCEBLOCK')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLBELTHOLD')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLBREAKAWAY')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLCLOSINGMARUBOZU')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLCONCEALBABYSWALL')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLCOUNTERATTACK')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLDOJI')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLDOJISTAR')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLDRAGONFLYDOJI')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLENGULFING')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLGAPSIDESIDEWHITE')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLGRAVESTONEDOJI')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLHAMMER')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLHANGINGMAN')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLHARAMI')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLHARAMICROSS')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLHIGHWAVE')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLHIKKAKE')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLHIKKAKEMOD')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLHOMINGPIGEON')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLIDENTICAL3CROWS')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLINNECK')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLINVERTEDHAMMER')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLKICKING')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLKICKINGBYLENGTH')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLLADDERBOTTOM')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLLONGLEGGEDDOJI')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLLONGLINE')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLMARUBOZU')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLMATCHINGLOW')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLONNECK')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLPIERCING')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLRICKSHAWMAN')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLRISEFALL3METHODS')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLSEPARATINGLINES')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLSHOOTINGSTAR')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLSHORTLINE')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLSPINNINGTOP')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLSTALLEDPATTERN')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLSTICKSANDWICH')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLTAKURI')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLTASUKIGAP')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLTHRUSTING')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLTRISTAR')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLUNIQUE3RIVER')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLUPSIDEGAP2CROWS')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr], Expr, name='ts_CDLXSIDEGAP3METHODS')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int, int, int, int, int], Expr, name='ts_STOCH')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int, int, int], Expr, name='ts_STOCHF')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int, int, int], Expr, name='ts_ULTOSC')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_ADX')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_ADXR')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_ATR')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_CCI')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_DX')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_MINUS_DI')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_NATR')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_PLUS_DI')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_WILLR')
pset.addPrimitive(dummy, [Expr, Expr, Expr], Expr, name='TYPPRICE')
pset.addPrimitive(dummy, [Expr, Expr, Expr], Expr, name='WCLPRICE')
pset.addPrimitive(dummy, [Expr, Expr, Expr], Expr, name='ts_TRANGE')
pset.addPrimitive(dummy, [Expr, Expr, float, float, float, float, float, float, float, float], Expr, name='ts_SAREXT')
pset.addPrimitive(dummy, [Expr, Expr, float, float], Expr, name='ts_SAR')
pset.addPrimitive(dummy, [Expr, Expr, int, int, int], Expr, name='ts_MAVP')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_AROON')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_AROONOSC')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_BETA')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_CORREL')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_MIDPRICE')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_MINUS_DM')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_PLUS_DM')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='ADD')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='DIV')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='MEDPRICE')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='MULT')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='SUB')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='ts_OBV')
pset.addPrimitive(dummy, [Expr, float, float], Expr, name='ts_MAMA')
pset.addPrimitive(dummy, [Expr, int, float, float, int], Expr, name='ts_BBANDS')
pset.addPrimitive(dummy, [Expr, int, float], Expr, name='ts_STDDEV')
pset.addPrimitive(dummy, [Expr, int, float], Expr, name='ts_T3')
pset.addPrimitive(dummy, [Expr, int, float], Expr, name='ts_VAR')
pset.addPrimitive(dummy, [Expr, int, int, int, int, int, int], Expr, name='ts_MACDEXT')
pset.addPrimitive(dummy, [Expr, int, int, int, int], Expr, name='ts_STOCHRSI')
pset.addPrimitive(dummy, [Expr, int, int, int], Expr, name='ts_APO')
pset.addPrimitive(dummy, [Expr, int, int, int], Expr, name='ts_MACD')
pset.addPrimitive(dummy, [Expr, int, int, int], Expr, name='ts_PPO')
pset.addPrimitive(dummy, [Expr, int, int], Expr, name='ts_MA')
pset.addPrimitive(dummy, [Expr, int], Expr, name='MAX')
pset.addPrimitive(dummy, [Expr, int], Expr, name='MAXINDEX')
pset.addPrimitive(dummy, [Expr, int], Expr, name='MIN')
pset.addPrimitive(dummy, [Expr, int], Expr, name='MININDEX')
pset.addPrimitive(dummy, [Expr, int], Expr, name='MINMAX')
pset.addPrimitive(dummy, [Expr, int], Expr, name='MINMAXINDEX')
pset.addPrimitive(dummy, [Expr, int], Expr, name='SUM')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_CMO')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_DEMA')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_EMA')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_KAMA')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_LINEARREG')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_LINEARREG_ANGLE')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_LINEARREG_INTERCEPT')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_LINEARREG_SLOPE')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_MACDFIX')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_MIDPOINT')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_MOM')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_ROC')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_ROCP')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_ROCR')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_ROCR100')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_RSI')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_SMA')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_TEMA')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_TRIMA')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_TRIX')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_TSF')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_WMA')
pset.addPrimitive(dummy, [Expr], Expr, name='ACOS')
pset.addPrimitive(dummy, [Expr], Expr, name='ASIN')
pset.addPrimitive(dummy, [Expr], Expr, name='ATAN')
pset.addPrimitive(dummy, [Expr], Expr, name='CEIL')
pset.addPrimitive(dummy, [Expr], Expr, name='COS')
pset.addPrimitive(dummy, [Expr], Expr, name='COSH')
pset.addPrimitive(dummy, [Expr], Expr, name='EXP')
pset.addPrimitive(dummy, [Expr], Expr, name='FLOOR')
pset.addPrimitive(dummy, [Expr], Expr, name='LN')
pset.addPrimitive(dummy, [Expr], Expr, name='LOG10')
pset.addPrimitive(dummy, [Expr], Expr, name='SIN')
pset.addPrimitive(dummy, [Expr], Expr, name='SINH')
pset.addPrimitive(dummy, [Expr], Expr, name='SQRT')
pset.addPrimitive(dummy, [Expr], Expr, name='TAN')
pset.addPrimitive(dummy, [Expr], Expr, name='TANH')
pset.addPrimitive(dummy, [Expr], Expr, name='ts_HT_DCPERIOD')
pset.addPrimitive(dummy, [Expr], Expr, name='ts_HT_DCPHASE')
pset.addPrimitive(dummy, [Expr], Expr, name='ts_HT_PHASOR')
pset.addPrimitive(dummy, [Expr], Expr, name='ts_HT_SINE')
pset.addPrimitive(dummy, [Expr], Expr, name='ts_HT_TRENDLINE')
pset.addPrimitive(dummy, [Expr], Expr, name='ts_HT_TRENDMODE')

# this code is auto generated by codegen_primitive.py
from deap import gp

dummy = None
Expr = float

pset = gp.PrimitiveSetTyped("MAIN", [], Expr)

# polars_ta.tdx.arithmetic
pset.addPrimitive(dummy, [Expr, Expr, Expr], Expr, name='BETWEEN')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ROUND2')
pset.addPrimitive(dummy, [Expr], Expr, name='ROUND')
# polars_ta.tdx.choice
pset.addPrimitive(dummy, [Expr, Expr, Expr], Expr, name='IF')
pset.addPrimitive(dummy, [Expr, Expr, Expr], Expr, name='IFF')
pset.addPrimitive(dummy, [Expr, Expr, Expr], Expr, name='IFN')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='ts_VALUEWHEN')
# polars_ta.tdx.energy
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, int], Expr, name='ts_BRAR_AR')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, int], Expr, name='ts_BRAR_BR')
pset.addPrimitive(dummy, [Expr, Expr, int, int], Expr, name='ts_MASS')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_CR')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_PSY')
# polars_ta.tdx.logical
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_LONGCROSS')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_NDAY')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='ts_CROSS')
pset.addPrimitive(dummy, [Expr, int, int], Expr, name='ts_EXISTR')
pset.addPrimitive(dummy, [Expr, int, int], Expr, name='ts_LAST')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_ALL')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_ANY')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_DOWNNDAY')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_EVERY')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_EXIST')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_UPNDAY')
pset.addPrimitive(dummy, [Expr], Expr, name='NOT')
# polars_ta.tdx.moving_average
pset.addPrimitive(dummy, [Expr, int, int, int, int], Expr, name='ts_BBI')
# polars_ta.tdx.over_bought_over_sold
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, int], Expr, name='ts_MFI')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int, int, int], Expr, name='ts_KDJ')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_ATR')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_CCI')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_BIAS')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_MTM')
# polars_ta.tdx.pattern
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, Expr, Expr, float], Expr, name='ts_WINNER_COST')
# polars_ta.tdx.pattern_feature
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, Expr, Expr], Expr, name='ts_剑')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, Expr, int], Expr, name='ts_揉搓线')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, int, int], Expr, name='ts_单阳不破选股')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, int, int], Expr, name='ts_回补跳空向上缺口')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, int], Expr, name='ts_鸳鸯底')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_低点搜寻')
pset.addPrimitive(dummy, [Expr, Expr, Expr], Expr, name='ts_仙人指路')
pset.addPrimitive(dummy, [Expr, Expr, Expr], Expr, name='ts_老鸭头')
pset.addPrimitive(dummy, [Expr, Expr, float, float], Expr, name='ts_低开大阳线')
pset.addPrimitive(dummy, [Expr, Expr, float, float], Expr, name='ts_出水芙蓉II')
pset.addPrimitive(dummy, [Expr, Expr, float, float], Expr, name='ts_高开大阴线')
pset.addPrimitive(dummy, [Expr, Expr, int, float], Expr, name='ts_强势整理')
pset.addPrimitive(dummy, [Expr, Expr, int, int, int, int], Expr, name='ts_均线多头排列')
pset.addPrimitive(dummy, [Expr, Expr, int, int, int, int], Expr, name='ts_均线空头排列')
pset.addPrimitive(dummy, [Expr, Expr, int, int, int], Expr, name='ts_出水芙蓉')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_旭日初升')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='ts_四串阳')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='ts_四串阴')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='ts_天量法则')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='ts_早晨之星')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='ts_跳空缺口选股')
pset.addPrimitive(dummy, [Expr, int, int, int], Expr, name='ts_突破')
pset.addPrimitive(dummy, [Expr, int, int], Expr, name='ts_近日创历史新低')
pset.addPrimitive(dummy, [Expr, int, int], Expr, name='ts_近日创历史新高')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_蜻蜓点水')
# polars_ta.tdx.pressure_support
pset.addPrimitive(dummy, [Expr, int, int], Expr, name='ts_BOLL')
pset.addPrimitive(dummy, [Expr, int, int], Expr, name='ts_BOLL_M')
# polars_ta.tdx.reference
pset.addPrimitive(dummy, [Expr, Expr, Expr], Expr, name='RANGE')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_SUMIF')
pset.addPrimitive(dummy, [Expr, float], Expr, name='ts_DMA')
pset.addPrimitive(dummy, [Expr, int, int], Expr, name='ts_SMA_CN')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_BARSSINCEN')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_EMA')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_EXPMA')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_EXPMEMA')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_FILTER')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_HOD')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_LOD')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_MEMA')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_REFX')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_TMA')
pset.addPrimitive(dummy, [Expr], Expr, name='LOWRANGE')
pset.addPrimitive(dummy, [Expr], Expr, name='ts_BARSLAST')
pset.addPrimitive(dummy, [Expr], Expr, name='ts_BARSLASTCOUNT')
pset.addPrimitive(dummy, [Expr], Expr, name='ts_BARSSINCE')
pset.addPrimitive(dummy, [Expr], Expr, name='ts_CUMSUM')
# polars_ta.tdx.statistic
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_AVEDEV')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_DEVSQ')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_SLOPE')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_STD')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_STDDEV')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_STDP')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_VAR')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_VARP')
pset.addPrimitive(dummy, [Expr], Expr, name='ts_up_stat')
# polars_ta.tdx.trend
pset.addPrimitive(dummy, [Expr, Expr, Expr, int, int], Expr, name='ts_ADX')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int, int], Expr, name='ts_ADXR')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_EMV')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_MINUS_DI')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_PLUS_DI')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_MINUS_DM')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_PLUS_DM')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_DPO')
# polars_ta.tdx.trend_feature
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, Expr, Expr, int], Expr, name='ts_小步碎阳')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, float], Expr, name='ts_跳空高开或低开')
pset.addPrimitive(dummy, [Expr, Expr, Expr, Expr, int], Expr, name='ts_昨日底部十字星')
pset.addPrimitive(dummy, [Expr, Expr, Expr, float, int, float, int], Expr, name='ts_放量上攻')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int, int], Expr, name='ts_突破长期盘整')
pset.addPrimitive(dummy, [Expr, Expr, Expr, int], Expr, name='ts_温和放量上攻')
pset.addPrimitive(dummy, [Expr, Expr, Expr], Expr, name='ts_下跌多日再放量上涨')
pset.addPrimitive(dummy, [Expr, Expr, Expr], Expr, name='ts_价量渐低后阳包阴')
pset.addPrimitive(dummy, [Expr, Expr, float, float], Expr, name='ts_单日放量')
pset.addPrimitive(dummy, [Expr, Expr, int, float], Expr, name='ts_N天内有跳空向上缺口')
pset.addPrimitive(dummy, [Expr, Expr, int, float], Expr, name='ts_N日内阳线多于阴线')
pset.addPrimitive(dummy, [Expr, Expr, int, float], Expr, name='ts_N日内阴线多于阳线')
pset.addPrimitive(dummy, [Expr, Expr, int, float], Expr, name='ts_阶段放量')
pset.addPrimitive(dummy, [Expr, Expr, int, float], Expr, name='ts_阶段缩量')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_连续N天收阳线')
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_连续N天收阴线')
pset.addPrimitive(dummy, [Expr, int, float, float, int], Expr, name='ts_间隔放量')
pset.addPrimitive(dummy, [Expr, int, float], Expr, name='ts_N日内上涨多于下跌')
pset.addPrimitive(dummy, [Expr, int, float], Expr, name='ts_N日内下跌多于上涨')
pset.addPrimitive(dummy, [Expr, int, float], Expr, name='ts_平台整理')
pset.addPrimitive(dummy, [Expr, int, float], Expr, name='ts_拉升后多日调整')
pset.addPrimitive(dummy, [Expr, int, float], Expr, name='ts_突然放量')
pset.addPrimitive(dummy, [Expr, int, int], Expr, name='ts_N天内经常涨停')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_N天内出现以涨停收盘')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_N天内出现涨停')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_N日内创新低')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_N日内创新高')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_持续放量')
pset.addPrimitive(dummy, [Expr, int], Expr, name='ts_持续缩量')
# polars_ta.tdx.volume
pset.addPrimitive(dummy, [Expr, Expr, int], Expr, name='ts_VR')
pset.addPrimitive(dummy, [Expr, Expr], Expr, name='ts_OBV')
